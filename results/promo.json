{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Local variable naming convention",
  "severity": "Moderate",
  "comment": "Local variable name 'EDITOR_CONFIG_KEYS' should start with a lowercase letter",
  "detailsInfo": "Reports local variables that do not follow the naming conventions.\n\nYou can specify the required pattern in the inspection options.\n\n[Recommended naming conventions](https://kotlinlang.org/docs/coding-conventions.html#function-names): it has to start with a lowercase letter, use camel case and no underscores.\n\n**Example:**\n\n\n      fun fibonacciNumber(index: Int): Long = when(index) {\n          0 -> 0\n          else -> {\n              // does not follow naming conventions: contains underscore symbol (`_`)\n              var number_one: Long = 0\n              // does not follow naming conventions: starts with an uppercase letter\n              var NUMBER_TWO: Long = 1\n              // follow naming conventions: starts with a lowercase letter, use camel case and no underscores.\n              var numberThree: Long = number_one + NUMBER_TWO\n\n              for(currentIndex in 2..index) {\n                  numberThree = number_one + NUMBER_TWO\n                  number_one = NUMBER_TWO\n                  NUMBER_TWO = numberThree\n              }\n              numberThree\n          }\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "build.gradle.kts",
      "language": "kotlin",
      "line": 53,
      "offset": 9,
      "length": 18,
      "code": {
        "startLine": 51,
        "length": 18,
        "offset": 71,
        "surroundingCode": "\n  configure<com.diffplug.gradle.spotless.SpotlessExtension> {\n    val EDITOR_CONFIG_KEYS: Set<String> = hashSetOf(\n      \"ij_kotlin_imports_layout\",\n      \"indent_size\","
      }
    }
  ],
  "attributes": {
    "module": "MVI_Coroutines_Flow",
    "inspectionName": "LocalVariableName"
  },
  "hash": "de9ca0a696ea9656a4b1578b55c324b6bae9a8437363115783835165a2c50979"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'testDispatcher' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "test-utils/src/main/java/com/hoc/flowmvi/test_utils/TestCoroutineDispatcherRule.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 7,
      "length": 14,
      "code": {
        "startLine": 15,
        "length": 14,
        "offset": 68,
        "surroundingCode": "@ExperimentalCoroutinesApi\nclass TestCoroutineDispatcherRule(\n  val testDispatcher: TestDispatcher = StandardTestDispatcher(),\n) : TestWatcher() {\n  override fun starting(description: Description) {"
      }
    }
  ],
  "attributes": {
    "module": "MVI_Coroutines_Flow.test-utils.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "5dadc8f8484076a239c1127f2d33e978497e4f3be17de99f1bba09baf0ff721e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"ValidationFailed\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "domain/src/main/java/com/hoc/flowmvi/domain/model/UserError.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 14,
      "length": 16,
      "code": {
        "startLine": 7,
        "length": 16,
        "offset": 122,
        "surroundingCode": "  data class UserNotFound(val id: String) : UserError()\n  data class InvalidId(val id: String) : UserError()\n  data class ValidationFailed(val errors: NonEmptySet<UserValidationError>) : UserError()\n  object ServerError : UserError()\n  object Unexpected : UserError()"
      }
    }
  ],
  "attributes": {
    "module": "MVI_Coroutines_Flow.domain.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4dfcf438c9d1f01a4ae82425fbdbd85d7303c5c38ece8f8bc310738a2d69a432"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"UserNotFound\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "domain/src/main/java/com/hoc/flowmvi/domain/model/UserError.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 14,
      "length": 12,
      "code": {
        "startLine": 5,
        "length": 12,
        "offset": 88,
        "surroundingCode": "sealed class UserError : Throwable() {\n  object NetworkError : UserError()\n  data class UserNotFound(val id: String) : UserError()\n  data class InvalidId(val id: String) : UserError()\n  data class ValidationFailed(val errors: NonEmptySet<UserValidationError>) : UserError()"
      }
    }
  ],
  "attributes": {
    "module": "MVI_Coroutines_Flow.domain.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "89e5cd35926583e4874f7aa558fdc6d4f45adc2b7286c29ea541cb025535900e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Object \"ServerError\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "domain/src/main/java/com/hoc/flowmvi/domain/model/UserError.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 10,
      "length": 11,
      "code": {
        "startLine": 8,
        "length": 11,
        "offset": 152,
        "surroundingCode": "  data class InvalidId(val id: String) : UserError()\n  data class ValidationFailed(val errors: NonEmptySet<UserValidationError>) : UserError()\n  object ServerError : UserError()\n  object Unexpected : UserError()\n}"
      }
    }
  ],
  "attributes": {
    "module": "MVI_Coroutines_Flow.domain.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "45e8826ab549c95551203bcb36f5ffdfe4076729eb7ab293606f21091f525abc"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Object \"Unexpected\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "domain/src/main/java/com/hoc/flowmvi/domain/model/UserError.kt",
      "language": "kotlin",
      "line": 11,
      "offset": 10,
      "length": 10,
      "code": {
        "startLine": 9,
        "length": 10,
        "offset": 134,
        "surroundingCode": "  data class ValidationFailed(val errors: NonEmptySet<UserValidationError>) : UserError()\n  object ServerError : UserError()\n  object Unexpected : UserError()\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "MVI_Coroutines_Flow.domain.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f2789cc61b3ae21cfcaa589e90eea06e4fa8fb656e8b579430ab890c27c2f68b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"InvalidId\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "domain/src/main/java/com/hoc/flowmvi/domain/model/UserError.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 14,
      "length": 9,
      "code": {
        "startLine": 6,
        "length": 9,
        "offset": 105,
        "surroundingCode": "  object NetworkError : UserError()\n  data class UserNotFound(val id: String) : UserError()\n  data class InvalidId(val id: String) : UserError()\n  data class ValidationFailed(val errors: NonEmptySet<UserValidationError>) : UserError()\n  object ServerError : UserError()"
      }
    }
  ],
  "attributes": {
    "module": "MVI_Coroutines_Flow.domain.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "33c0c17ea26c6ccb35dfb9adfc8c8ee126547743a1e539724aeb22ecbd788590"
}]}